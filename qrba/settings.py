"""
Django settings for qrba project.

Generated by 'django-admin startproject' using Django 1.11.5.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
from decouple import config
from django.utils.safestring import mark_safe

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

SESSION_EXPIRE_AT_BROWSER_CLOSE = True

# Expire the session after one hour
SESSION_COOKIE_AGE = 3600
# https://stackoverflow.com/questions/8023126/how-can-i-test-https-connections-with-django-as-easily-as-i-can-non-https-conne1826
# SESSION_COOKIE_SECURE=True

# http://www.aptivate.org/en/blog/2013/01/22/making-it-obvious-which-copy-of-a-django-site-you-are-using/
# used in provision/templates/admin/base_site.html template so we know which site we're looking at
DEPLOY_ENV = "Development"
DEPLOY_ENV_COLOR = '#7DCEA0'  # light green

# DEPLOY_ENV = "Integration"
# DEPLOY_ENV_COLOR = 'orange'

# django default color
# DEPLOY_ENV = "Production"
# DEPLOY_ENV_COLOR = "#79aec8"


ALLOWED_HOSTS = ['0.0.0.0', 'localhost', '127.0.0.1', '1.2.3.4' ]

# Application definition

INSTALLED_APPS = [
    'provision.apps.QrbaConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
#    'django_ssl_auth.SSLClientAuthMiddleware',
# ]

ROOT_URLCONF = 'qrba.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'qrba.context_processors.deploy_env',
            ],
        },
    },
]

WSGI_APPLICATION = 'qrba.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'OPTIONS': {
            'read_default_file': '/qrbaadmin/qrba_admin/config/qrba_my.cnf',
            'init_command': "SET sql_mode='STRICT_ALL_TABLES'",
        },
    }
}

# its-adm is using mariadb -- which does not support STRICT_ALL_TABLES
#             'init_command': "SET sql_mode='STRICT_ALL_TABLES'"


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = '/var/www/html/static/'

# tailored from https://www.webforefront.com/django/setupdjangologging.html
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse',
        },
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        },
    },
    'formatters': {
        'simple': {
            'format': '[%(asctime)s] %(levelname)s %(message)s',
            'datefmt': '%Y-%m-%d %H:%M:%S'
        },
        'verbose': {
            'format': '[%(asctime)s] %(levelname)s [%(name)s.%(funcName)s:%(lineno)d] %(message)s',
            'datefmt': '%Y-%m-%d %H:%M:%S'
        },
    },
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'filters': ['require_debug_true'],
            'class': 'logging.StreamHandler',
            'formatter': 'simple'
        },
        'development_logfile': {
            'level': 'DEBUG',
            'filters': ['require_debug_true'],
            'class': 'logging.FileHandler',
            'filename': '/qrbaadmin/qrba_admin/logs/django_dev.log',
            'formatter': 'verbose'
        },
        'info_logfile': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': '/qrbaadmin/qrba_admin/logs/django_info.log',
            'formatter': 'verbose'
        },
        'production_logfile': {
            'level': 'ERROR',
            'filters': ['require_debug_false'],
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': '/qrbaadmin/qrba_admin/logs/django_production.log',
            'maxBytes': 1024 * 1024 * 1024 * 100,  # 100GB
            'backupCount': 5,
            'formatter': 'simple'
        },
    },
    'root': {
        'level': 'DEBUG',
        'handlers': ['console'],
    },
    'loggers': {
        'django': {
            'handlers': ['development_logfile', 'production_logfile'],
        },
        'django.request': {
            'handlers': ['development_logfile', 'production_logfile'],
        },
        'django.server': {
            'handlers': ['development_logfile', 'production_logfile'],
        },
        'qrba': {
            'handlers': ['development_logfile', 'info_logfile', 'production_logfile'],
        },
        'py.warnings': {
            'handlers': ['development_logfile'],
        },
    }
}

QUMULO_API_VERSION = '2.13.0'

QUMULO_BASE_PATH = "/some/path/to/top/of/organization"  # NOTE -- no trailing '/'  ... it gets added when needed
DEFAULT_CLUSTERPATH = QUMULO_BASE_PATH + "/new_clusterpath"
DEFUALT_QUOTANAME = QUMULO_BASE_PATH + "/new_quota"

# Leading '#' is used to force these objects to top of the sort order
NONE_NAME = "#None"
MZpattern = "_multizone-"

# for capturing statistics
HOST_STATISTICS_PREFIX = "#HostStatistics"

QUMULO_devcluster = {'name': 'Development', 'ipaddr': '1.2.3.4',
                     'adminpassword': config('QUMULO_devcluster_pwd'),
                     'port': 8000}
QUMULO_intcluster = {'name': 'Integration', 'ipaddr': '1.2.3.5',
                     'adminpassword': config('QUMULO_intcluster_pwd'),
                     'port': 8000}
QUMULO_prodcluster = {'name': 'Production', 'ipaddr': '1.2.3.6',
                      'adminpassword': config('QUMULO_prodcluster_pwd'),
                      'port': 8000}


# Used to map email addresses
LEGACY_TO_NEW_ORGANIZATIONS = {
    'old-org-name': 'newname',
}

ORGANIZATION_DEFAULT_ADMIN_HOSTS = {
    'default': ['1.2.3.4'],
    'orgname': []
                                    }

# Used to track ipzones -- these ASSUME no devices are available on these subnets -- verify this with network admins 
IPZONE_MARKER_BASE = "10.253."
HOST_STATISTICS_IPBASE = "10.254."
PRIVATE_TLD = ".tld.private"

PRIVATE_ZONE_STR = "DMZ"
LOCALHOST = '127.0.0.1'

QUOTA_1MB = int(1000 ** 2)
QUOTA_1GB = int(1000 ** 3)
QUOTA_1TB = int(1000 ** 4)
QUOTA_1PB = int(1000 ** 5)

# all in TB
DEFAULT_LIMIT_UNITS = 'tb'
ORGNAME_LIMIT = 30
DATA_LIMIT = QUOTA_1TB * 14
DEFAULT_CLUSTER_QUOTA_LIMIT = 560  # TB
DEFAULT_ORG_SMALL_QUOTA_LIMIT = 10

# Built-in safety margin applied whenever a 'child' quotas is created
QUOTA_SAFETY_MARGIN_PERCENTAGE = 2

# Some default limits
ORGANIZATION_QUOTA_LIMITS = {'default': DEFAULT_ORG_SMALL_QUOTA_LIMIT,
                             'orgname': ORGNAME_LIMIT,
                             }


# AUTHENTICATION_BACKENDS = ('django_ssl_auth.SSLClientAuthBackend', )
# USER_DATA_FN = 'django_ssl_auth.fineid.user_dict_from_dn'
#AUTOCREATE_VALID_SSL_USERS = True

# strip and encode to remove the annoying unicode 'u' character
QRBA_ADMIN_EMAIL = "qrbaadmin@org.tld".strip().encode('ascii', 'ignore')
EMAIL_HOST = 'mail.ord.tld'.strip().encode('ascii', 'ignore')

# use 25 instead of 587
# internal routing expects traffic from noreply@org.tld to originate on port 25; which is running TLS
EMAIL_PORT = 25
EMAIL_HOST_USER = 'noreply@org.tld'.strip().encode('ascii', 'ignore')
EMAIL_USE_TLS = True

HELP_TEXT_CLUSTERPATH_NAMES = mark_safe(
    "This is a REQUIRED field<br>Development (dev): " + QUMULO_devcluster['ipaddr'] + "<br>Integration (int): " +
    QUMULO_intcluster[
        'ipaddr'] + "<br>Production (prod): " + QUMULO_prodcluster['ipaddr'])
HELP_TEXT_CLUSTERPATH_QUOTA = mark_safe(
    "This is a REQUIRED field<br>#None indicates that no quota will be attached to this clusterpath")
HELP_TEXT_CLUSTERPATH_DIRPATH = mark_safe("Directory path on the selected cluster")

HELP_TEXT_IPZONE = mark_safe(
    "Name of this IPzone.  If 'Name; contains the string 'DMZ', then all hosts provided in 'Hostnames' below will reassigned to be in the domain '" + PRIVATE_TLD + "'")
HELP_TEXT_IPZONE_HOSTNAMES = mark_safe(
    "IPZones managed by the system (AKA ADZones) cannot be modified; you can click SAVE, but all edits will be silently ignored<br>One entry per line in formats:<br><ul style='list-style-type:disc'><li>FQHN</li><li>IPaddress</li><li>FQHN (IPaddress)</li><li>Or A SINGLE LINE containing a comma-separted list of ADZONE names, FQHNs, or ipaddresses on a single line; for example:<br>X-ROOT,X,X-TEST,data.tld.org,someone.org.tld</li></ul>")

HELP_TEXT_NFSEXPORT_CLUSTERPATH = mark_safe(
    "This is a REQUIRED field<br>Clusterpath is the path on a cluster that will be exported as Export Name")
HELP_TEXT_NFSEXPORTPATH = "Name of this NFS Export<br>By convention an organization name appears at the beginning of an Export Name; except for '/' which is owned by ITS"
HELP_TEXT_NFSEXPORTDESC = "An optional description of this export's purpose"
HELP_TEXT_NFSEXPORTREST = "One or more NFS Restrictions are REQUIRED"
HELP_TEXT_NFSEXPORT_CREATE_SUBDIRS = mark_safe(
    "When checked, a NEW Clusterpath and associated Quota will be created by appending the Export Name onto the selected Clusterpath.<br>The new clusterpath's quota size will be set to equal to its parent's quota size minus " + str(
        QUOTA_SAFETY_MARGIN_PERCENTAGE) + "% as a safety margin.<br>NOTE: This box will become unchecked once the sub-clusterpath has been created and assigned to this export.  So DO NOT re-check it unless you want to create a sub-sub-clusterpath.")
HELP_TEXT_NFSEXPORT_USERMAPPING = mark_safe(
    "NFS_MAP_NONE means no user id mapping occurs<br>NFS_MAP_ROOT means map root user to the provided Usermapid<br>NFS_MAP_ALL means map all users to the provided Usermapid")
HELP_TEXT_NFSEXPORT_USERMAPID = mark_safe("UNIX user ID; only used when User Mapping 'NFS_MAP_ALL' is selected")

HELP_TEXT_ORGANIZATION = mark_safe("This is a REQUIRED field<br>Organization that owns this quota")

HELP_TEXT_RESTRICTION_INDIVIDUAL_HOSTS = mark_safe(
    "This is a REQUIRED field<br>#None is a placeholder indicating no individual hosts are included")
HELP_TEXT_RESTRICTION_READONLY = "When checked, hosts within the selected IPZones will not have write permission"

HELP_TEXT_QUOTA_SIZE = mark_safe("Size of this quota in units given below<br>Initial value was set to " + str(
    QUOTA_SAFETY_MARGIN_PERCENTAGE) + "% less than its parent's quota size; rounded down to the next integer")

HELP_TEXT_DND = "When checked this object cannot be deleted"
HELP_TEXT_IMMUTABLE = "When checked this object cannot be modified or deleted"
HOST_TEXT_READONLY_IN_DMZ = "When checked this host will be SILENTLY dropped from any NFS Restriction which is marked as writable; even though the host's IPZone remains attached the NFS Restriction."
